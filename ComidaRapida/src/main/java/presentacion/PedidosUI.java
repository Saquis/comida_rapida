/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package presentacion;

import datos.Comidas;
import datos.MesasDatos;
import datos.Rol;
import datos.Usuario;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.Statement;
import java.util.ArrayList;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import logica.Conexion;
import logica.FunPedidos;

/**
 *
 * @author princ
 */
public class PedidosUI extends javax.swing.JInternalFrame {

    private Conexion mysql = new Conexion();
    private Connection cn = mysql.getConnection();
    private ArrayList<String> pedidos = new ArrayList<>();
    private String nombrePlato;
    private int idMesa;

    /**
     * Creates new form PedidosUI
     */
    public PedidosUI() {
        initComponents();
        mostrar("");
        cargarCombobox(cboPlatos);
        cargarCombobox2(cboIdMesa);
        cargarCombobox3(cboRol);
        cargarCombobox4(cboUsuario);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnActualizar = new javax.swing.JButton();
        btnAgregar = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();
        lblregistros = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txtCantidad = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblPedidos = new javax.swing.JTable();
        cboPlatos = new javax.swing.JComboBox<>();
        cboRol = new javax.swing.JComboBox<>();
        cboIdMesa = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        cboUsuario = new javax.swing.JComboBox<>();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("PEDIDOS");

        btnActualizar.setText("ACTUALIZAR");
        btnActualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnActualizarActionPerformed(evt);
            }
        });

        btnAgregar.setText("AGREGAR");
        btnAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarActionPerformed(evt);
            }
        });

        btnEliminar.setText("ELIMINAR");
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });

        lblregistros.setText("TOTAL REGISTROS :");

        jLabel3.setText("PLATOS:");

        jLabel4.setText("CANTIDAD:");

        jLabel5.setText("ROL:");

        jLabel6.setText("ID MESA:");

        tblPedidos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "ID PEDIDO", "NOMBRE USUARIO", "NOMBRE PLATO", "CANTIDAD", "ID MESA", "FECHA", "ESTADO"
            }
        ));
        tblPedidos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblPedidosMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblPedidos);

        jLabel1.setText("ID USUARIO:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                    .addComponent(txtCantidad, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(121, 121, 121))
                                .addGroup(layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel3)
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(jLabel6)
                                            .addGap(18, 18, 18)
                                            .addComponent(cboIdMesa, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGap(127, 127, 127)))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel4)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel5)
                                        .addGap(18, 18, 18)
                                        .addComponent(cboRol, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel1)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(cboUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(209, 209, 209)))
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 516, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnActualizar)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnAgregar)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnEliminar))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(62, 62, 62)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(cboPlatos, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(339, 339, 339)
                                        .addComponent(lblregistros, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(29, 29, 29)
                        .addComponent(lblregistros))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                    .addGap(6, 6, 6)
                                    .addComponent(jLabel4)
                                    .addGap(42, 42, 42))
                                .addGroup(layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(jLabel6)
                                        .addComponent(cboIdMesa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGap(18, 18, 18)
                                    .addComponent(txtCantidad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(41, 41, 41)))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel3)
                                .addComponent(cboPlatos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(cboRol, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(cboUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 151, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnActualizar)
                    .addComponent(btnAgregar)
                    .addComponent(btnEliminar))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        // TODO add your handling code here:
        int filaSeleccionada = tblPedidos.getSelectedRow();
        if (filaSeleccionada >= 0) {
            int idPedido = Integer.parseInt(tblPedidos.getValueAt(filaSeleccionada, 0).toString());

            FunPedidos fp = new FunPedidos();
            if (fp.eliminarPedido(idPedido)) {
                JOptionPane.showMessageDialog(null, "Pedido eliminado correctamente");
                mostrar("");
            } else {
                JOptionPane.showMessageDialog(null, "Error al eliminar pedido");
            }
        } else {
            JOptionPane.showMessageDialog(null, "Seleccione un pedido para eliminar");
        }
    }//GEN-LAST:event_btnEliminarActionPerformed

    private void btnAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarActionPerformed
        // TODO add your handling code here:
        String nombrePlato = cboPlatos.getSelectedItem().toString();
        int cantidad = Integer.parseInt(txtCantidad.getText());
        int idMesa = Integer.parseInt(cboIdMesa.getSelectedItem().toString());
        int idUsuario = Integer.parseInt(cboUsuario.getSelectedItem().toString());
        
        FunPedidos fp = new FunPedidos();
        String estadoMesa = fp.getEstadoMesa(idMesa);

        if ("V".equals(estadoMesa)) { // Mesa activa
            
            if (fp.insertarPedido("", cantidad, idMesa, nombrePlato, idUsuario)) {
                JOptionPane.showMessageDialog(null, "Pedido agregado correctamente");
                mostrar("");
            } else {
                JOptionPane.showMessageDialog(null, "Error al agregar pedido");
            }
        } else { // Mesa inactiva
            JOptionPane.showMessageDialog(null, "La mesa está inactiva. No se pueden agregar pedidos.");
        }
    }//GEN-LAST:event_btnAgregarActionPerformed

    private void tblPedidosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblPedidosMouseClicked
        // TODO add your handling code here:
        int fila = tblPedidos.rowAtPoint(evt.getPoint());
        if (fila >= 0) {
            cboRol.setSelectedItem(tblPedidos.getValueAt(fila, 6).toString());
        }
    }//GEN-LAST:event_tblPedidosMouseClicked

    private void btnActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnActualizarActionPerformed
        // TODO add your handling code here:
        int filaSeleccionada = tblPedidos.getSelectedRow();
        if (filaSeleccionada >= 0) {
            int idPedido = Integer.parseInt(tblPedidos.getValueAt(filaSeleccionada, 0).toString()); // Obtener ID del pedido desde la tabla
            String nombrePlato = cboPlatos.getSelectedItem().toString(); // Obtener nombre del plato seleccionado
            int cantidad = Integer.parseInt(txtCantidad.getText()); // Obtener cantidad desde un campo de texto
            int idMesa = Integer.parseInt(cboIdMesa.getSelectedItem().toString()); // Obtener ID de mesa seleccionada

            MesasDatos m = new MesasDatos();
            FunPedidos fp = new FunPedidos();
            
            String estadoMesa = fp.getEstadoMesa(idMesa);

            if ("V".equals(estadoMesa)) { // Mesa activa
                
                if (fp.editarPedido(idPedido, "", nombrePlato, cantidad, idMesa, "", 1)) {
                    JOptionPane.showMessageDialog(null, "Pedido editado correctamente");
                    mostrar("");
                } else {
                    JOptionPane.showMessageDialog(null, "Error al editar pedido");
                }
            } else { // Mesa inactiva
                JOptionPane.showMessageDialog(null, "La mesa está inactiva. No se pueden editar pedidos.");
            }
        } else {
            JOptionPane.showMessageDialog(null, "Seleccione un pedido para editar");
        }
    }//GEN-LAST:event_btnActualizarActionPerformed
    private void cargarCombobox(JComboBox c) {
        DefaultComboBoxModel combo = new DefaultComboBoxModel();
        c.setModel(combo);
        FunPedidos fp = new FunPedidos();
        try {
            Statement st = cn.createStatement();
            ResultSet rs = st.executeQuery("SELECT nombre FROM plato");
            while (rs.next()) {
                Comidas co = new Comidas();
                co.setNombre(rs.getString(1)); // Ajustar según el nombre del método en Comidas
                fp.Agregar_Platos(co);
                combo.addElement(co.getNombre());
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private void cargarCombobox2(JComboBox c) {
        DefaultComboBoxModel combo = new DefaultComboBoxModel();
        c.setModel(combo);
        FunPedidos fp = new FunPedidos();
        try {
            Statement st = cn.createStatement();
            ResultSet rs = st.executeQuery("SELECT idmesa FROM mesa");
            while (rs.next()) {
                MesasDatos m = new MesasDatos();
                m.setIdMesa(rs.getInt(1));
                fp.AgregarMesas(m);
                combo.addElement(m.getIdMesa());
            }
        } catch (Exception e) {
        }
    }

    private void cargarCombobox3(JComboBox c) {
        DefaultComboBoxModel combo = new DefaultComboBoxModel();
        c.setModel(combo);
        FunPedidos fp = new FunPedidos();
        try {
            Statement st = cn.createStatement();
            ResultSet rs = st.executeQuery("SELECT nombre FROM rol");
            while (rs.next()) {
                Rol r = new Rol();
                r.setNombre(rs.getString(1));
                fp.AgregarRoles(r);
                combo.addElement(r.getNombre());
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private void cargarCombobox4(JComboBox c) {
        DefaultComboBoxModel combo = new DefaultComboBoxModel();
        c.setModel(combo);
        FunPedidos fp = new FunPedidos();
        try {
            Statement st = cn.createStatement();
            ResultSet rs = st.executeQuery("SELECT idusuario FROM usuario");
            while (rs.next()) {
                Usuario u = new Usuario();
                u.setId_usuario(rs.getInt(1));
                fp.AgregarIDUsuario(u);
                combo.addElement(u.getId_usuario());
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    void mostrar(String buscar) {
        try {
            DefaultTableModel modelo = new DefaultTableModel();
            FunPedidos fp = new FunPedidos();
            modelo = fp.mostrar(buscar);
            tblPedidos.setModel(modelo);
            lblregistros.setText("TOTAL DE REGISTROS: " + Integer.toHexString(fp.totalRegistro + 1));
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Error al mostrar datos" + e);
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnActualizar;
    private javax.swing.JButton btnAgregar;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JComboBox<String> cboIdMesa;
    private javax.swing.JComboBox<String> cboPlatos;
    private javax.swing.JComboBox<String> cboRol;
    private javax.swing.JComboBox<String> cboUsuario;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblregistros;
    private javax.swing.JTable tblPedidos;
    private javax.swing.JTextField txtCantidad;
    // End of variables declaration//GEN-END:variables
}
