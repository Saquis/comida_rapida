/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package presentacion;

import datos.MesasDatos;
import datos.PedidosDatos;
import datos.Rol;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.Statement;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import logica.Conexion;
import logica.FunPedidos;
import presentacion.PedidosUI;

/**
 *
 * @author princ
 */
public class PedidosUI extends javax.swing.JInternalFrame {

    private Conexion mysql = new Conexion();
    private Connection cn = mysql.getConnection();

    /**
     * Creates new form PedidosUI
     */
    public PedidosUI() {
        initComponents();
        mostrar("");
        cargarCombobox(cboPlatos);
        cargarCombobox2(cboIdMesa);
        cargarCombobox3(cboRoles);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        txtCIUsuario = new javax.swing.JTextField();
        btnActualizar = new javax.swing.JButton();
        btnAgregar = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();
        lblregistros = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txtCantidad = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblPedidos = new javax.swing.JTable();
        cboIdMesa = new javax.swing.JComboBox<>();
        cboPlatos = new javax.swing.JComboBox<>();
        cboRoles = new javax.swing.JComboBox<>();

        setTitle("PEDIDOS");

        jLabel1.setText("CI DEL CLIENTE:");

        btnActualizar.setText("ACTUALIZAR");
        btnActualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnActualizarActionPerformed(evt);
            }
        });

        btnAgregar.setText("AGREGAR");
        btnAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarActionPerformed(evt);
            }
        });

        btnEliminar.setText("ELIMINAR");
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });

        lblregistros.setText("TOTAL REGISTROS :");

        jLabel3.setText("PLATOS:");

        jLabel4.setText("CANTIDAD:");

        jLabel5.setText("ROL:");

        jLabel6.setText("ID MESA:");

        tblPedidos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "ID PEDIDO", "NOMBRE USUARIO", "NOMBRE PLATO", "CANTIDAD", "ID MESA", "FECHA", "ESTADO"
            }
        ));
        tblPedidos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblPedidosMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblPedidos);

        cboIdMesa.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        cboPlatos.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        cboRoles.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel4)
                            .addComponent(jLabel3)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6))
                        .addGap(40, 40, 40)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtCIUsuario)
                            .addComponent(txtCantidad)
                            .addComponent(cboIdMesa, 0, 97, Short.MAX_VALUE)
                            .addComponent(cboPlatos, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(cboRoles, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(92, 92, 92)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 452, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addComponent(btnActualizar)
                        .addGap(18, 18, 18)
                        .addComponent(btnAgregar)
                        .addGap(18, 18, 18)
                        .addComponent(btnEliminar)
                        .addGap(84, 84, 84)
                        .addComponent(lblregistros, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(17, 17, 17)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(txtCIUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(cboIdMesa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(txtCantidad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(cboPlatos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(cboRoles, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnEliminar)
                    .addComponent(btnAgregar)
                    .addComponent(btnActualizar)
                    .addComponent(lblregistros))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        // TODO add your handling code here:
        if (!txtCIUsuario.getText().isEmpty()) {
            int confirmacion = JOptionPane.showConfirmDialog(rootPane, "¿Está seguro de eliminar el pedido?", "Confirmar", JOptionPane.YES_NO_OPTION);
            if (confirmacion == JOptionPane.YES_OPTION) {
                FunPedidos fp = new FunPedidos();
                int idPedido = Integer.parseInt(txtCIUsuario.getText());
                if (fp.eliminarPedido(idPedido)) {
                    JOptionPane.showMessageDialog(null, "Pedido eliminado correctamente.");
                    mostrar("");
                } else {
                    JOptionPane.showMessageDialog(null, "Error al eliminar el pedido.");
                }
            }
        } else {
            JOptionPane.showMessageDialog(null, "Seleccione un pedido para eliminar.");
        }
    }//GEN-LAST:event_btnEliminarActionPerformed

    private void btnAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarActionPerformed
        // TODO add your handling code here:
        if (txtCIUsuario.getText().isEmpty() || txtCantidad.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Debe llenar todos los campos.");
            return;
        }
        // Obtener los valores de los campos
        String cedulaCliente = txtCIUsuario.getText();
        String nombrePlato = cboPlatos.getSelectedItem().toString();
        int cantidad = Integer.parseInt(txtCantidad.getText());
        int idMesa = Integer.parseInt(cboIdMesa.getSelectedItem().toString());

        // Llamar al método de lógica para agregar el pedido
        FunPedidos fp = new FunPedidos();
        if (fp.insertarPedido(cedulaCliente, nombrePlato, cantidad, idMesa)) {
            JOptionPane.showMessageDialog(null, "Pedido agregado correctamente.");
            mostrar("");
        } else {
            JOptionPane.showMessageDialog(null, "Error al agregar el pedido.");
        }
    }//GEN-LAST:event_btnAgregarActionPerformed

    private void tblPedidosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblPedidosMouseClicked
        // TODO add your handling code here:
        int fila = tblPedidos.getSelectedRow();

        txtCIUsuario.setText(tblPedidos.getValueAt(fila, 0).toString());
    }//GEN-LAST:event_tblPedidosMouseClicked

    private void btnActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnActualizarActionPerformed
        // TODO add your handling code here:
        if (!txtCIUsuario.getText().isEmpty()) {
            int idPedido = Integer.parseInt(txtCIUsuario.getText());
            String nombrePlato = cboPlatos.getSelectedItem().toString();
            int cantidad = Integer.parseInt(txtCantidad.getText());
            int idMesa = Integer.parseInt(cboIdMesa.getSelectedItem().toString());

            FunPedidos fp = new FunPedidos();
            if (fp.editarPedido(idPedido, nombrePlato, nombrePlato, cantidad, idMesa)) {
                JOptionPane.showMessageDialog(null, "Pedido actualizado correctamente.");
                mostrar("");
            } else {
                JOptionPane.showMessageDialog(null, "Error al actualizar el pedido.");
            }
        } else {
            JOptionPane.showMessageDialog(null, "Seleccione un pedido para actualizar.");
        }
    }//GEN-LAST:event_btnActualizarActionPerformed
    private void cargarCombobox(JComboBox<String> c) {
        DefaultComboBoxModel<String> combo = new DefaultComboBoxModel<>();
        c.setModel(combo);
        FunPedidos fp = new FunPedidos();
        try {
            Statement st = cn.createStatement();
            ResultSet rs = st.executeQuery("SELECT nombre FROM plato");
            while (rs.next()) {
                PedidosDatos p = new PedidosDatos();
                p.setNombre(rs.getString(1)); // Ajustar según el nombre del método en PedidosDatos
                fp.Agregar_Platos(p);
                combo.addElement(p.getNombre());
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private void cargarCombobox2(JComboBox<String> c) {
        DefaultComboBoxModel<String> combo = new DefaultComboBoxModel<>();
        c.setModel(combo);
        FunPedidos fp = new FunPedidos();
        try {
            Statement st = cn.createStatement();
            ResultSet rs = st.executeQuery("SELECT idmesa FROM mesa");
            while (rs.next()) {
                MesasDatos m = new MesasDatos(); // Usa el constructor sin parámetros
                m.setIdMesa(rs.getInt(1));
                fp.AgregarMesas(m);
                combo.addElement(String.valueOf(m.getIdMesa()));
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private void cargarCombobox3(JComboBox<String> c) {
        DefaultComboBoxModel<String> combo = new DefaultComboBoxModel<>();
        c.setModel(combo);
        FunPedidos fp = new FunPedidos();
        try {
            Statement st = cn.createStatement();
            ResultSet rs = st.executeQuery("SELECT nombre FROM rol");
            while (rs.next()) {
                Rol r = new Rol();
                r.setNombre(rs.getString(1));
                fp.AgregarRoles(r);
                combo.addElement(r.getNombre());
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    void mostrar(String buscar) {
        try {
            DefaultTableModel modelo = new DefaultTableModel();
            FunPedidos fp = new FunPedidos();
            modelo = fp.mostrar(buscar);
            tblPedidos.setModel(modelo);
            lblregistros.setText("TOTAL DE REGISTROS: " + Integer.toHexString(fp.totalRegistro + 1));
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Error al mostrar datos" + e);
        }
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnActualizar;
    private javax.swing.JButton btnAgregar;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JComboBox<String> cboIdMesa;
    private javax.swing.JComboBox<String> cboPlatos;
    private javax.swing.JComboBox<String> cboRoles;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblregistros;
    private javax.swing.JTable tblPedidos;
    private javax.swing.JTextField txtCIUsuario;
    private javax.swing.JTextField txtCantidad;
    // End of variables declaration//GEN-END:variables
}
